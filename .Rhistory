ggplot(temp_long_plot) + geom_histogram(aes(ave_temp), bins = 30, fill = 'black') + facet_wrap(~year, nrow = 2) +
labs(title = "Histogram of mean daily temperature across 34 provinces in Indonesia",
subtitle = "2011-2015",
x = "Count",
y = "Mean Daily Temperature",
caption = "Data collected from BMKG Indonesia")
temp_long_plot <- temp_long %>% filter(ave_temp > 0)
ggplot(temp_long_plot) + geom_histogram(aes(ave_temp), bins = 10, fill = 'black') + facet_wrap(~year, nrow = 2) +
labs(title = "Histogram of mean daily temperature across 34 provinces in Indonesia",
subtitle = "2011-2015",
x = "Count",
y = "Mean Daily Temperature",
caption = "Data collected from BMKG Indonesia")
rh <- read_csv('../datasets/indonesia/humidity.csv')
head(rh)
rh_long <- rh %>%
pivot_longer(cols = c('2011', '2012', '2013', '2014', '2015'),
names_to = 'year',
values_to = 'ave_rh')
rh_long
rh_long_plot <- rh_long %>% filter(ave_rh > 0)
ggplot(rh_long_plot) + geom_histogram(aes(ave_rh), bins = 10, fill = 'black') + facet_wrap(~year, nrow = 2) +
labs(title = "Histogram of mean daily humidity across 34 provinces in Indonesia",
subtitle = "2011-2015",
x = "Count",
y = "Mean Daily Humidity",
caption = "Data collected from BMKG Indonesia")
loadPkg <- function(pkgname){
# Test to see if package pkgname is installed.
# character.only=TRUE means pkgname is a character string with the name
# of the package we want to use.
if(require(pkgname, character.only = TRUE)) {
# paste0() concatenates strings without any separator
print(paste0("'", pkgname,"' is loaded correctly"))
} else {
# The require() function returned FALSE so we will try to install the
# package from the CRAN site
print(paste0("Trying to install '", pkgname, "'"))
install.packages(pkgname, character.only = TRUE,
repos="http://cran.us.r-project.org")
if(require(pkgname, character.only = TRUE)) {
print(paste0("'", pkgname, "' is installed and loaded."))
} else {
print(paste0("Could not install '", pkgname, "'"))
}
}
}
# If we provide a vector of package names, we can load them all as follows:
loadPkgs <- function(pkgnames){
for (pkgname in pkgnames) loadPkg(pkgname)
}
pkgs <- c('tidyverse',
'dplyr',
'colorspace',
'ggfortify',
'GGally',
'psych',
'ggbiplot',
'AMR',
'caret',
'ROCR',
'pROC',
'mlogit',
'leaps',
'glmnet')
loadPkgs(pkgs)
# Theme for ggplot
theme_set(
theme_light() + theme(legend.position = "top")
)
climate <- rain_long %>% left_join(temp_long, by = c(Province, year))
climate <- rain_long %>% left_join(temp_long)
climate
climate <- rain_long %>% left_join(temp_long) %>% left_join(rh_long)
climate
ggplot(climate) + ggbiplot()
ggbiplot(climate)
ggpairs(climate)
ggpairs(climate %>% select(!Province))
ggpairs(climate %>% select(!c(Province, year))
ggpairs(climate %>% select(!c(Province, year)))
ggpairs(climate %>% select(!c(Province, year))) +
labs(title = "Correlations between variables",
subtitle = "Combined data between rainfall, temperature, humidity",
caption = "Data collected from BMKG Indonesia")
car::vif(climate %>% select(!c(Province, year)))
edu <- read_csv('../datasets/education/edu19-24.csv')
head(temp)
edu <- read_csv('../datasets/education/edu19-24.csv')
head(edu)
edu <- read_csv('../datasets/education/indo_edu.csv')
head(edu)
edu_long <- edu %>%
pivot_longer(cols = c('2011', '2012', '2013', '2014', '2015'),
names_to = 'year',
values_to = 'part_rate')
edu_long <- edu %>%
mutate(`2015` = as.character(`2015`)) %>%
pivot_longer(cols = c('2011', '2012', '2013', '2014', '2015'),
names_to = 'year',
values_to = 'part_rate')
edu_long
climate_edu <- climate %>% left_join(edu_long)
climate_edu <- climate %>% left_join(edu_long)
climate_edu
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
train
test
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
model <- lm(part_rate ~ ., data = train)
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
train
View(train)
climate_edu <- climate %>% left_join(edu_long) %>% replace(0)
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(ave_rh = replace_na(ave_rh, 0))
climate_edu
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
train
model <- lm(part_rate ~ ., data = train)
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
train <- train %>% filter(Province == 'Kalimantan Utara')
model <- lm(part_rate ~ ., data = train)
model <- lm(part_rate ~ ., data = train %>% select(!Province))
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
train <- train %>% filter(Province != 'Kalimantan Utara')
model <- lm(part_rate ~ ., data = train %>% select(!Province))
summary(model)
model1 <- regsubsets(part_rate ~ ., data = train)
summary(model1)
model1 <- regsubsets(part_rate ~ ., data = train, nvmax = 38)
summary(model1)
plot(summary(model1)$rsq)
plot(summary(model1)$adjr2)
which.max(summary(model1)$adjr2)
summary(model1)$which
summary(model1)$which[34]
summary(model1)$which[34,]
summary(model1)$which[34, summary(model1)$which[34, ] == TRUE]
model1 <- regsubsets(part_rate ~ ., data = train %>% select(!Province))
summary(model1)
plot(summary(model1)$rsq)
plot(summary(model1)$adjr2)
which.max(summary(model1)$adjr2)
summary(model1)$which[which.max(summary(model1)$adjr2), summary(model1)$which[which.max(summary(model1)$adjr2), ] == TRUE]
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(ave_rh = replace_na(ave_rh, 0),
year = as.numeric(year))
climate_edu
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
train <- train %>% filter(Province != 'Kalimantan Utara')
model <- lm(part_rate ~ ., data = train %>% select(!Province))
summary(model)
model1 <- regsubsets(part_rate ~ ., data = train %>% select(!Province))
summary(model1)
plot(summary(model1)$rsq)
plot(summary(model1)$adjr2)
which.max(summary(model1)$adjr2)
summary(model1)$which[which.max(summary(model1)$adjr2), summary(model1)$which[which.max(summary(model1)$adjr2), ] == TRUE]
model2 <- lm(part_rate ~ year + ave_temp, data = train %>% select(!Province))
summary(model2)
car::vif(model2)
prediction <- predict(model2, newdata = test)
prediction <- predict(model2, newdata = test)
mse <- mean((prediction - test$part_rate)^2)
View(test)
prediction <- predict(model2, newdata = test)
mse <- (prediction - test$part_rate)^2
prediction <- predict(model2, newdata = test)
mse <- (prediction - test$part_rate)
test$part_rate
test$part_rate
prediction
as.numeric(test$part_rate)
prediction <- predict(model2, newdata = test)
mse <- mean((prediction - as.numeric(test$part_rate))^2)
mse
model <- lm(part_rate ~ ., data = train %>% select(!Province))
summary(model)
knitr::kable(summary(model))
loadPkg <- function(pkgname){
# Test to see if package pkgname is installed.
# character.only=TRUE means pkgname is a character string with the name
# of the package we want to use.
if(require(pkgname, character.only = TRUE)) {
# paste0() concatenates strings without any separator
print(paste0("'", pkgname,"' is loaded correctly"))
} else {
# The require() function returned FALSE so we will try to install the
# package from the CRAN site
print(paste0("Trying to install '", pkgname, "'"))
install.packages(pkgname, character.only = TRUE,
repos="http://cran.us.r-project.org")
if(require(pkgname, character.only = TRUE)) {
print(paste0("'", pkgname, "' is installed and loaded."))
} else {
print(paste0("Could not install '", pkgname, "'"))
}
}
}
# If we provide a vector of package names, we can load them all as follows:
loadPkgs <- function(pkgnames){
for (pkgname in pkgnames) loadPkg(pkgname)
}
pkgs <- c('tidyverse',
'dplyr',
'colorspace',
'ggfortify',
'GGally',
'psych',
'ggbiplot',
'AMR',
'caret',
'ROCR',
'pROC',
'mlogit',
'leaps',
'glmnet',
"sjPlot",
"sjmisc",
"sjlabelled")
loadPkgs(pkgs)
# Theme for ggplot
theme_set(
theme_light() + theme(legend.position = "top")
)
model <- lm(part_rate ~ ., data = train %>% select(!Province))
summary(model)
tab_model(model)
model2 <- lm(part_rate ~ year + ave_temp, data = train %>% select(!Province))
summary(model2)
tab_model(model2)
tab_model(model1, model2)
tab_model(model, model2)
ggpairs(climate_edu %>% select(!c(Province, year))) +
labs(title = "Correlations between variables",
subtitle = "Combined data between rainfall, temperature, humidity and school participation",
caption = "Data collected from BMKG Indonesia and BPS Indonesia")
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(ave_rh = replace_na(ave_rh, 0),
year = as.numeric(year),
part_rate = as.numeric(part_rate))
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(ave_rh = replace_na(ave_rh, 0),
year = as.numeric(year),
)
climate_edu <- climate %>% left_join(edu_long)
climate_edu
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(ave_rh = replace_na(ave_rh, 0),
year = as.numeric(year),
part_rate = as.numeric(part_rate))
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(year = as.numeric(year),
part_rate = as.numeric(part_rate))
climate_edu
View(climate_edu)
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(year = as.numeric(year),
part_rate = as.numeric(part_rate),
ave_rh = tidyr::replace_na(ave_rh, 0))
climate_edu
ggpairs(climate_edu %>% select(!c(Province, year))) +
labs(title = "Correlations between variables",
subtitle = "Combined data between rainfall, temperature, humidity and school participation",
caption = "Data collected from BMKG Indonesia and BPS Indonesia")
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(year = as.numeric(year),
part_rate = as.numeric(part_rate),
ave_rh = tidyr::replace_na(ave_rh, 0)) %>%
filter(cum_rf > 0, ave_temp > 0, ave_rh > 0)
climate_edu
ggpairs(climate_edu %>% select(!c(Province, year))) +
labs(title = "Correlations between variables",
subtitle = "Combined data between rainfall, temperature, humidity and school participation",
caption = "Data collected from BMKG Indonesia and BPS Indonesia")
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
train <- train %>% filter(Province != 'Kalimantan Utara')
model <- lm(part_rate ~ ., data = train %>% select(!Province))
summary(model)
tab_model(model)
model1 <- regsubsets(part_rate ~ ., data = train %>% select(!Province))
summary(model1)
plot(summary(model1)$rsq)
plot(summary(model1)$adjr2)
which.max(summary(model1)$adjr2)
summary(model1)$which[which.max(summary(model1)$adjr2), summary(model1)$which[which.max(summary(model1)$adjr2), ] == TRUE]
model2 <- lm(part_rate ~ year + ave_temp, data = train %>% select(!Province))
summary(model2)
tab_model(model2)
tab_model(model, model2)
car::vif(model)
car::vif(model2)
kable::knitr(car::vif(model))
loadPkg("knitr")
knitr::kable(car::vif(model))
knitr::kable(car::vif(model2))
knitr::kable(car::vif(model), title("VIF for Linear Model 1"))
vif1 <- car::vif(model)
vif2 <- car::vif(model2)
kables(list(vif1, vif2))
vif1 <- car::vif(model)
vif2 <- car::vif(model2)
kables(list(kable(vif1), kable(vif2)))
vif1 <- car::vif(model)
vif2 <- car::vif(model2)
kables(list(kable(vif1, col.names = VIF), kable(vif2)))
vif1 <- car::vif(model)
vif2 <- car::vif(model2)
kables(list(kable(vif1, col.names = 'VIF'), kable(vif2)))
vif1 <- car::vif(model)
vif2 <- car::vif(model2)
kables(list(kable(vif1, col.names = 'VIF', caption = "VIF for Model 1"), kable(vif2, col.names = "VIF", caption = "VIF for Model 2")), caption = "VIF for Both Models")
loadPkg <- function(pkgname){
# Test to see if package pkgname is installed.
# character.only=TRUE means pkgname is a character string with the name
# of the package we want to use.
if(require(pkgname, character.only = TRUE)) {
# paste0() concatenates strings without any separator
print(paste0("'", pkgname,"' is loaded correctly"))
} else {
# The require() function returned FALSE so we will try to install the
# package from the CRAN site
print(paste0("Trying to install '", pkgname, "'"))
install.packages(pkgname, character.only = TRUE,
repos="http://cran.us.r-project.org")
if(require(pkgname, character.only = TRUE)) {
print(paste0("'", pkgname, "' is installed and loaded."))
} else {
print(paste0("Could not install '", pkgname, "'"))
}
}
}
# If we provide a vector of package names, we can load them all as follows:
loadPkgs <- function(pkgnames){
for (pkgname in pkgnames) loadPkg(pkgname)
}
pkgs <- c('tidyverse',
'dplyr',
'colorspace',
'ggfortify',
'GGally',
'psych',
'ggbiplot',
'AMR',
'caret',
'ROCR',
'pROC',
'mlogit',
'leaps',
'glmnet',
"sjPlot",
"sjmisc",
"sjlabelled",
"knitr")
loadPkgs(pkgs)
# Theme for ggplot
theme_set(
theme_light() + theme(legend.position = "top")
)
prediction <- predict(model2, newdata = test)
mse <- mean((prediction - as.numeric(test$part_rate))^2)
mse
rmse <- sqrt(mse)
rmse
loadPkg <- function(pkgname){
# Test to see if package pkgname is installed.
# character.only=TRUE means pkgname is a character string with the name
# of the package we want to use.
if(require(pkgname, character.only = TRUE)) {
# paste0() concatenates strings without any separator
print(paste0("'", pkgname,"' is loaded correctly"))
} else {
# The require() function returned FALSE so we will try to install the
# package from the CRAN site
print(paste0("Trying to install '", pkgname, "'"))
install.packages(pkgname, character.only = TRUE,
repos="http://cran.us.r-project.org")
if(require(pkgname, character.only = TRUE)) {
print(paste0("'", pkgname, "' is installed and loaded."))
} else {
print(paste0("Could not install '", pkgname, "'"))
}
}
}
# If we provide a vector of package names, we can load them all as follows:
loadPkgs <- function(pkgnames){
for (pkgname in pkgnames) loadPkg(pkgname)
}
pkgs <- c('tidyverse',
'dplyr',
'colorspace',
'ggfortify',
'GGally',
'psych',
'ggbiplot',
'AMR',
'caret',
'ROCR',
'pROC',
'mlogit',
'leaps',
'glmnet',
"sjPlot",
"sjmisc",
"sjlabelled",
"knitr")
loadPkgs(pkgs)
# Theme for ggplot
theme_set(
theme_light() + theme(legend.position = "top")
)
rain <- read_csv('../datasets/indonesia/rainfall.csv')
rain
rain_long <- rain %>%
pivot_longer(cols = c('2011', '2012', '2013', '2014', '2015'),
names_to = 'year',
values_to = 'cum_rf')
rain_long
ggplot(rain_long) + geom_histogram(aes(cum_rf), bins = 10, fill = 'black') + facet_wrap(~year, nrow = 2) +
labs(title = "Histogram of rainfall across 34 provinces in Indonesia",
subtitle = "2011-2015",
x = "Count",
y = "Cumulative Rainfall",
caption = "Data collected from BMKG Indonesia")
temp <- read_csv('../datasets/indonesia/temp.csv')
head(temp)
temp_long <- temp %>%
pivot_longer(cols = c('2011', '2012', '2013', '2014', '2015'),
names_to = 'year',
values_to = 'ave_temp')
temp_long
temp_long_plot <- temp_long %>% filter(ave_temp > 0)
ggplot(temp_long_plot) + geom_histogram(aes(ave_temp), bins = 10, fill = 'black') + facet_wrap(~year, nrow = 2) +
labs(title = "Histogram of mean daily temperature across 34 provinces in Indonesia",
subtitle = "2011-2015",
x = "Count",
y = "Mean Daily Temperature",
caption = "Data collected from BMKG Indonesia")
rh <- read_csv('../datasets/indonesia/humidity.csv')
head(rh)
rh_long <- rh %>%
pivot_longer(cols = c('2011', '2012', '2013', '2014', '2015'),
names_to = 'year',
values_to = 'ave_rh')
rh_long
rh_long_plot <- rh_long %>% filter(ave_rh > 0)
ggplot(rh_long_plot) + geom_histogram(aes(ave_rh), bins = 10, fill = 'black') + facet_wrap(~year, nrow = 2) +
labs(title = "Histogram of mean daily humidity across 34 provinces in Indonesia",
subtitle = "2011-2015",
x = "Count",
y = "Mean Daily Humidity",
caption = "Data collected from BMKG Indonesia")
climate <- rain_long %>% left_join(temp_long) %>% left_join(rh_long)
climate
ggpairs(climate %>% select(!c(Province, year))) +
labs(title = "Correlations between variables",
subtitle = "Combined data between rainfall, temperature, humidity",
caption = "Data collected from BMKG Indonesia")
edu <- read_csv('../datasets/education/indo_edu.csv')
head(edu)
edu_long <- edu %>%
mutate(`2015` = as.character(`2015`)) %>%
pivot_longer(cols = c('2011', '2012', '2013', '2014', '2015'),
names_to = 'year',
values_to = 'part_rate')
edu_long
climate_edu <- climate %>% left_join(edu_long) %>%
mutate(year = as.numeric(year),
part_rate = as.numeric(part_rate),
ave_rh = tidyr::replace_na(ave_rh, 0)) %>%
filter(cum_rf > 0, ave_temp > 0, ave_rh > 0)
climate_edu
ggpairs(climate_edu %>% select(!c(Province, year))) +
labs(title = "Correlations between variables",
subtitle = "Combined data between rainfall, temperature, humidity and school participation",
caption = "Data collected from BMKG Indonesia and BPS Indonesia")
train <- climate_edu %>% filter(year != '2015')
test <- climate_edu %>% filter(year == '2015')
train <- train %>% filter(Province != 'Kalimantan Utara')
model <- lm(part_rate ~ ., data = train %>% select(!Province))
summary(model)
tab_model(model)
model1 <- regsubsets(part_rate ~ ., data = train %>% select(!Province))
summary(model1)
plot(summary(model1)$rsq)
plot(summary(model1)$adjr2)
which.max(summary(model1)$adjr2)
summary(model1)$which[which.max(summary(model1)$adjr2), summary(model1)$which[which.max(summary(model1)$adjr2), ] == TRUE]
model2 <- lm(part_rate ~ year + ave_temp, data = train %>% select(!Province))
summary(model2)
tab_model(model2)
tab_model(model, model2)
vif1 <- car::vif(model)
vif2 <- car::vif(model2)
kables(list(kable(vif1, col.names = 'VIF', caption = "VIF for Model 1"), kable(vif2, col.names = "VIF", caption = "VIF for Model 2")), caption = "VIF for Both Models")
prediction <- predict(model2, newdata = test)
mse <- mean((prediction - as.numeric(test$part_rate))^2)
mse
rmse <- sqrt(mse)
rmse
vif1 <- car::vif(model)
# kables(list(kable(vif1, col.names = 'VIF', caption = "VIF for Model 1"), kable(vif2, col.names = "VIF", caption = "VIF for Model 2")), caption = "VIF for Both Models")
kable(vif1, col.names = 'VIF', caption = "VIF for Model 1")
